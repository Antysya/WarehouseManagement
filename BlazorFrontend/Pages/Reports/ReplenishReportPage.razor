@page "/report/remains"
@inject IJSRuntime js
@using ClosedXML
@using ClosedXML.Excel

@if (order == null)
{
    <p><em>Загрузка...</em></p>
}
else if (order != null)
{
    <h3>На складе заканчивается:</h3>
    <MudTable Items="@order" Dense="true">
        <HeaderContent>
            <MudTh>Товар</MudTh>
            <MudTh>Артикул</MudTh>
            <MudTh>Товарная группа</MudTh>
            <MudTh>Тип</MudTh>
            <MudTh>Допустимый минимальный остаток</MudTh>
            <MudTh>Остаток на складе</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>
                <MudText>@context.Product</MudText>
            </MudTd>
            <MudTd>
                <MudText>@context.Code</MudText>
            </MudTd>
            <MudTd>
                <MudText>@context.Group</MudText>
            </MudTd>
            <MudTd>
                <MudText>@context.Status</MudText>
            </MudTd>
            <MudTd>
                <MudText>@context.MinimumStock</MudText>
            </MudTd>
            <MudTd>
                <MudText>@context.Quantity</MudText>
            </MudTd>
        </RowTemplate>
    </MudTable>

    @* <MudButton Style="margin-top: 20px" @onclick="async () => await ExportToExcel()" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.FileDownload" Color="Color.Primary">Экспорт в Excel</MudButton> *@
    
}


@code {

    protected IEnumerable<ReplenishReport> order;


    protected override async Task OnInitializedAsync()
    {
        order = await WarehouseApiClient.GetReplenishReport();
    }

}

