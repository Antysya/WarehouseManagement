@page "/products"
@inject HttpApiClient.WarehouseApiClient WarehouseApiClient;

<h1 class="mb-3">Каталог товаров</h1>
@if (products == null)
{
    <p class="text-danger"><em>Загрузка...</em></p>
}
else
{
    <MudTable Items="@products" Hover="true" Bordered="true" Filter="new Func<Products, bool>(FilterCycleCheck)">
        <ToolBarContent>
            <MudText Typo="Typo.h6" Style="margin-left: 50%">Поиск</MudText>
            <MudTextField @bind-Value="@searchterm" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Products, object>(x=>x.Id)">Идентификатор</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Products, object>(x=>x.Name)">Наименование товара</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Products, object>(x=>x.Code)">Артикул</MudTableSortLabel></MudTh>
            <MudTh>Занимаемый объем</MudTh>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Products, object>(x=>x.ProductGroupId)">Товарная группа</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Products, object>(x=>x.ProductStatusId)">Тип</MudTableSortLabel></MudTh>
            <MudTh>Минимальный остаток</MudTh>
            <MudTh>Максимальный срок хранения</MudTh>
            <MudTh>Действия</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Идентификатор">@context.Id</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Code">@context.Code</MudTd>
            <MudTd DataLabel="BoxSize">@context.BoxSize</MudTd>
            <MudTd DataLabel="ProductGroupId">@context.ProductGroupId</MudTd>
            <MudTd>
                <a href='/product/edit/@context.Id' class="btn btn-outline-dark mr-2" role="button">
                    <i class="fas fa-edit"></i>
                </a>
                <a href='/product/delete/@context.Id' class="btn btn-outline-danger" role="button">
                    <i class="fas fa-trash-alt"></i>
                </a>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{10,20}" />
        </PagerContent>
    </MudTable>
}

@code {
    protected List<Products> products = new();
    string searchterm = "";
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        products = await WarehouseApiClient.GetProductsAsync();
    }

    private bool FilterCycleCheck(Products item)
    {
        if (item.Name.Contains(searchterm))
        {
            return true;
        }
        if (item.Id.ToString().Contains(searchterm))
        {
            return true;
        }
        if (item.ProductStatusId.ToString().Contains(searchterm))
        {
            return true;
        }
        if (item.ProductGroupId.ToString().Contains(searchterm))
        {
            return true;
        }
        return false;
    }

        }




