@page "/references/product-type"
@inject HttpApiClient.WarehouseApiClient WarehouseApiClient;

<h1>Типы товаров</h1>

@if (Types == null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <MudTable Items="@Types" Hover="true" Striped="true" SortLabel="Sort By" Filter="new Func<ProductStatuses, bool>(FilterCycleCheck)">
        <ToolBarContent>
            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" href='/product-status/add'>Добавить</MudButton>
            <MudTextField @bind-Value="@searchterm" Placeholder="Поиск по наименованию" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small" Class="mt-0" Style="margin-left:70%"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<ProductStatuses, object>(x=>x.Id)">Идентификатор</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<ProductStatuses, object>(x=>x.Name)">Наименование</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Идентификатор">@context.Id</MudTd>
            <MudTd DataLabel="Наименование">@context.Name</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager RowsPerPageString="Строк на странице:" PageSizeOptions="new int[]{10,20}" />
        </PagerContent>
    </MudTable>
}
@code {
    protected IReadOnlyList<ProductStatuses> Types;
    string searchterm = "";
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Types = await WarehouseApiClient.GetProductStatusesAsync();
    }
    private bool FilterCycleCheck(ProductStatuses item)
    {
        if (item.Name.Contains(searchterm))
        {
            return true;
        }
        if (item.Id.ToString().Contains(searchterm))
        {
            return true;
        }
        return false;
    }
}


